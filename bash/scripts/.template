#!/bin/sh -u

BASE_DIR=$(cd $(dirname "$0") && pwd -P)
SCRIPT_NAME=$(basename "$0")


# functions
# ==========================================

fail() {
    echo "${1-command failed}" >&2
    exit ${2:-1}
}

rem() {
    [ "$VERBOSE" -eq 1 ] && echo -e "+ [\033[1;37;40m$@\033[0;0m]" >&2
}

usage() {
    cat <<EOI
Usage: $SCRIPT_NAME [ARGUMENTS]
(e.g.)

ARGUMENTS:

    -a|--arg FOOVAL       Does something with FOOVAL
    -b|--boolarg          Sets some flag
    -d|--dry-run          Run without making any changes
    -h|--help             This information
    -v|--verbose          Print debugging information to stdout

EXAMPLE:

    \$ $SCRIPT_NAME
EOI
}

cmd() {
    if [ $DRYRUN -eq 1 ]; then
        echo -e "\033[0;33;40m# $(printf "'%s' " "$@")\033[0;0m" >&2
    else
        [ $VERBOSE -eq 1 ] \
            && echo -e "\033[0;33;40m# $(printf "'%s' " "$@")\033[0;0m" >&2
        "$@"
    fi
}

prompt_yn() {
    local msg="${1:-confinue?}"
    local resp=''
    while [ "$resp" != 'y' -a "$resp" != 'n' ]; do
        read -p "$msg (y|n) > " resp
    done
    [ "$resp" = 'y' ] && return 0 || return 1
}

# collect args
# ==========================================

VERBOSE=0
DRYRUN=0

bool_arg=0
some_arg=

while [ $# -gt 0 ]; do
    arg="$1"
    shift
    case "$arg" in 
        --dry-run|-d)
            DRYRUN=1
            ;;
        --verbose|-v)
            VERBOSE=1
            ;;
        --help|-h)
            usage
            exit
            ;;
        --arg|-a)
            [ $# -ge 1 ] || fail "Missing arg to --arg|-a"
            some_arg="$1"
            shift
            ;;
        --bool|-b)
            bool_arg=1
            ;;
        *)
            fail "Invalid argument: $arg"
            ;;
    esac
done


# script body
# ==========================================

file=".foo bar.$$"
rem "listing a file as an example"
[ -f "$file" ] && fail "'$file' exists already"
touch "$file" || fail "failed to touch '$file'"
cmd ls -la "$file"
rm -f "$file"
